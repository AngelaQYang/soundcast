\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=0.5cm,bmargin=0.5cm,lmargin=1.0cm,rmargin=0.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage[unicode=true,pdfusetitle,
            bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
            breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
{hyperref}
\hypersetup{
  pdfstartview={XYZ null null 1}}
\usepackage{breakurl}
\usepackage{lscape}            % for landscape mode tables

\begin{document}
\SweaveOpts{concordance=TRUE}
\SweaveOpts{prefix.string=graphics/plot, eps = FALSE, pdf = TRUE}
\setlength{\textwidth}{6in} 
\def\Sweavesize{\smallsize} 

\title{Daysim Summary}

\author{PSRC}

\maketitle
\small

\begin{abstract}
This document compares a SoundCast run to the household survey data.
\end{abstract}

<<echo=false>>=
  # Author: suzanne.childress
  ###############################################################################

###This script generates basic summaries for a Daysim model run outputs in HDF5
#install.packages("plyr")
#install.packages("data.table")
#install.packages("rhdf5")
# can be found on: http://www.bioconductor.org/packages/2.13/bioc/html
# /rhdf5.html
#install.packages("ggplot2")
#install.packages("car")
#install.packages("xtable")
#install.packages("sqldf")
#install.packages("reshape2")
#install.packages("knitr")

library(plyr)
library(data.table)
library(rhdf5)
library(ggplot2)
library(car)
library(xtable)
library(sqldf)
library(reshape2)
library(knitr)

options(width=100)
options("scipen" = 100, digits=2)
@


<<summary, cache=TRUE, eval=TRUE, echo=FALSE, include=TRUE, results = verbatim>>=
  paths<- vector(mode = "list", length=2)
# construct the names of where the files are located
run_path = "D:/soundcat/"
run_path = unlist(strsplit(run_path, split="scripts", fixed=TRUE))[1]
paths <-c(paste(run_path, "/outputs/daysim_outputs.h5",sep = ""),
          paste(run_path, "/scripts/summarize/survey.h5", sep = ""))


# Give a descriptive name of the two datasets that are being compared
# For now we will assume the first dataset is ALWAYS the model, and the second is ALWAYS
# the survey
names(paths)<- c("2010 Model Run", "2006 Survey")
type <- names(paths)


recode <- function(dataset){
  dataset$mode[dataset$mode==1] <- "walk"
  dataset$mode[dataset$mode==2] <- "bike"
  dataset$mode[dataset$mode==3] <- "sov"
  dataset$mode[dataset$mode==4] <- "hov2"
  dataset$mode[dataset$mode==5] <- "hov3+"
  dataset$mode[dataset$mode==6] <- "transit"
  dataset$mode[dataset$mode==7] <- "other"
  dataset$mode[dataset$mode==8] <- "school_bus"
  dataset$mode[dataset$mode==9] <- "other"

}

h5group_to_table<-function (daysim_path, h5_data_root, datasets = NULL) 
{
  if (is.null(datasets)) {
    dir <- h5ls(daysim_path)
    datasets_select <- dir[dir$group %in% h5_data_root, "name"]
  }
  else {
    datasets_select <- datasets
  }
  i = 0
  for (x in datasets_select) {
    if (i == 0) {
      outtable <- data.table(h5read(daysim_path, paste(h5_data_root, 
                                                       x, sep = "/")))
    }
    else {
      outtable <- cbind(outtable, data.table(h5read(daysim_path, 
                                                    paste(h5_data_root, x, sep = "/"))))
    }
    i = i + 1
  }
  setnames(outtable, datasets_select)
  return(outtable)
}

get_group_names<-function (data1_path) 
{
  dataset_names <- h5ls(data1_path)
  group_names <- unique(dataset_names$group)
  group_names <- group_names[group_names != "/"]
  group_names
}

######################################################################################
# READ IN DATA


for(i in 1:1)
{
    table<- h5group_to_table(paths[i], '/Trip')
    table_name <- 'Trip_1'
    assign(table_name, table)
  
}
#####################################################################
### RECODE DATA FOR READABILITY




#####################################################################
@

\subsection{PNR Trips}
<<summary, cache=TRUE, eval=TRUE, echo=FALSE, include=TRUE, results = verbatim>>=
pnr_trips <- sqldf("SELECT sum(trexpfac), otaz from Trip_1 where Trip_1.mode = 6  and Trip_1.otaz>3750 group by otaz order by otaz")

write.csv(pnr_trips, paste(run_path,"/scripts/summarize/pnr_trips.csv", sep = ""))
@
\end{document}
